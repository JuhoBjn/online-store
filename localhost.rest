# https://github.com/Huachao/vscode-restclient 
# https://marketplace.visualstudio.com/items?itemName=humao.rest-client

###

http://localhost:5000/healthz

###
# @name signup
POST http://localhost:5000/api/users/signup
Content-Type: application/json
Accept: application/json

{
  "email": "timothy@tester.com",
  "password": "Timothy@tester12345"
}

###
# @name login
POST http://localhost:5000/api/users/login
Content-Type: application/json
Accept: application/json

{
  "email": "timothy@tester.com",
  "password": "Timothy@tester12345"
}

###
@token = {{login.response.body.token}}
@user_id = {{login.response.body.id}}

### Send password reset link - success

POST http://localhost:5000/api/password-reset/send-reset-email
Content-Type: application/json

{
    "email": "timothy@tester.com"
}

### Send password reset link - email not found

POST http://localhost:5000/api/password-reset/send-reset-email
Content-Type: application/json

{
    "email": "does.not.exist@test.example.com"
}

### Reset password - invalid token

POST http://localhost:5000/api/password-reset/set-new-password
Content-Type: application/json

{
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFhYWFhYWFhLTA2MTUtNGQwNC1hNzk1LTljNTc1NmVmNWY0YyIsImlhdCI6MTY4MTI0NTEyMywiZXhwIjoxNjgxMjQ2MjIzfQ.oh9fSC9MHyk5iX3ZuFoPsd6WXGF5laNg_ysyAULZ1ws", 
    "password": "newPassword1"
}


### Reset password - expired

POST http://localhost:5000/api/password-reset/set-new-password
Content-Type: application/json

{
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFhYWFhYWFhLTA2MTUtNGQwNC1hNzk1LTljNTc1NmVmNWY0YyIsImlhdCI6MTY4MTI0NTEyMywiZXhwIjoxNjgxMjQ2MzIzfQ.7O80aKMcONZ7ulFZgfd4tBOB3md4vDg0zG-7A8zTa-U", 
    "password": "newPassword1"
}

### Reset password - success

POST http://localhost:5000/api/password-reset/set-new-password
Content-Type: application/json

{
    "token": "{{token}}", 
    "password": "newPassword1"
}

### Reset password - fail password checks

POST http://localhost:5000/api/password-reset/set-new-password
Content-Type: application/json

{
    "token": "{{token}}", 
    "password": "newpassword"
}

### Send Friend Request
@receiver_user_id = 239aec9f-066e-4e6a-88d7-9cdccd43445b
POST http://localhost:5000/api/users/{{user_id}}/friend-requests/{{receiver_user_id}}
Accept: application/json
Authorization: Bearer {{token}}

### Get list of sent friend requests

GET http://localhost:5000/api/users/{{user_id}}/friend-requests/sent
Accept: application/json
Authorization: Bearer {{token}}

### Get list of received friend requests

GET http://localhost:5000/api/users/{{user_id}}/friend-requests/received
Accept: application/json
Authorization: Bearer {{token}}

### Deny friend request
# @prompt friend_request_id Enter friend request id
PUT http://localhost:5000/api/users/{{user_id}}/friend-requests/{{friend_request_id}}
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "status": "denied"
}

### Accept friend request
# @prompt friend_request_id Enter friend request id
PUT http://localhost:5000/api/users/{{user_id}}/friend-requests/{{friend_request_id}}
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "status": "accepted"
}

### Get list of friends

GET http://localhost:5000/api/users/{{user_id}}/friends
Accept: application/json
Authorization: Bearer {{token}}

### Unfriend a user
# @prompt friends_user_id Enter user id of friend
DELETE http://localhost:5000/api/users/{{user_id}}/friends/{{friends_user_id}}
Accept: application/json
Authorization: Bearer {{token}}

### Update user profile
# You can update many values at once by changing the key:
# first_name
# last_name
# email
# postal_code
# city
# country
# phone
PATCH http://localhost:5000/api/users/{{user_id}}
Content-Type: application/json
Authorization: BEARER {{token}}

{
    "first_name": "Jorma",
    "last_name": "Korhonen"
}

### Find user by id

GET http://localhost:5000/api/users/{{user_id}}
Content-Type: application/json
Authorization: BEARER {{token}}

### find all users

GET http://localhost:5000/api/users
Content-Type: application/json
Authorization: BEARER {{token}}

### Delete user

DELETE http://localhost:5000/api/users/{{user_id}}
Content-Type: application/json
Authorization: BEARER {{token}}

### Login as caretaker (for testing events)
# @name caretakerLogin
POST http://localhost:5000/api/users/login
Content-Type: application/json
Accept: application/json

{
  "email": "larrys@test.com",
  "password": "Larry12345"
}

### Create event - with image

POST http://localhost:5000/api/events
Content-Type: multipart/form-data; boundary=--contentboundary
Authorization: Bearer {{caretakerLogin.response.body.token}}

----contentboundary
Content-Disposition: form-data; name="json"
Content-Type: application/json

{
    "name": "Test Event",
    "description": "This is a test event",
    "starts_at": "2021-02-01T00:00:00.000Z",
    "ends_at": "2021-02-01T00:00:00.000Z"
}
----contentboundary
Content-Disposition: form-data; name="file"; filename="red.jpg"
Content-Type: image/jpeg

< ./red.jpg
----contentboundary--

### Create event - no image

POST http://localhost:5000/api/events
Authorization: Bearer {{caretakerLogin.response.body.token}}
Content-Type: application/json

{
    "name": "Test Event",
    "description": "This is a test event",
    "starts_at": "2021-02-01T00:00:00.000Z",
    "ends_at": "2021-02-01T12:00:00.000Z"
}

### Delete event

# @prompt event_id Enter event id
DELETE http://localhost:5000/api/events/{{event_id}}
Authorization: Bearer {{caretakerLogin.response.body.token}}

### Update event
# @prompt event_id Enter event id
PATCH http://localhost:5000/api/events/{{event_id}}
Content-Type: application/json
Authorization: Bearer {{caretakerLogin.response.body.token}}

{
    "name": "Test Event Updated",
    "description": "This is a updated test event",
    "starts_at": "2021-02-01T06:00:00.000Z",
    "ends_at": "2021-02-01T18:00:00.000Z"
}

### Update event
# @prompt event_id Enter event id
PATCH http://localhost:5000/api/events/{{event_id}}
Content-Type: application/json
Authorization: Bearer {{caretakerLogin.response.body.token}}

{
    "starts_at": "2021-02-04T06:00:00.000Z",
    "ends_at": "2021-02-05T18:00:00.000Z"
}

### Get event details
# @prompt event_id Enter event id
GET http://localhost:5000/api/events/{{event_id}}
Authorization: Bearer {{token}}

### Get list of events with pagination

GET http://localhost:5000/api/events?limit=10&page=1
Authorization: Bearer {{token}}

### Get list of events

GET http://localhost:5000/api/events
Authorization: Bearer {{token}}

### Signup as event attendee
# @prompt event_id Enter event id
POST http://localhost:5000/api/events/{{event_id}}/attendees
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "user_id": "{{user_id}}"
}

### Get list of event attendees
# @prompt event_id Enter event id
GET http://localhost:5000/api/events/{{event_id}}/attendees
Authorization: Bearer {{token}}

### Delete event attendee
# @prompt event_id Enter event id
# @prompt user_id Enter user id
DELETE http://localhost:5000/api/events/{{event_id}}/attendees/{{user_id}}
Authorization: Bearer {{token}}

### Get list of events for a user

GET http://localhost:5000/api/users/{{user_id}}/events
Authorization: Bearer {{token}}

